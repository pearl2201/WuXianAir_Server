-record(achieve,{achieveid,chapter,part,target,bonus,bonus2,type,script}).
%%@@wb20130301成就按客户端更改
-record(achieve_award,{awardid,require_value,bonus}).
-record(achieve_fuwen,{fuwenid,type,level,eff,require_ach}).
-record(achieve_proto,{achieveid,chapter,part,achieve_num,require,achieve_value,achieve_hp,type,script}).
%-record(achieve_role,{roleid,achieves}).
%%
-record(activity,{id,start,duration,spec_info}).
-record(activity_value_proto,{id,type,maxtimes,time,com_condition,value,targetid}).
-record(activity_value_reward,{value,reward}).
-record(ai_agents,{id,entry,type,events,conditions,chance,maxcount,skill,target,cooldown,msgs,script,next_ai}).
-record(answer,{id,correct,score,time}).
-record(answer_option,{id,level,start,sign_before,nums,interval,vip_addtion,all_addtion,rewards,vip_props,base_exp}).
-record(attr_info,{quality,dropnum,attrrate_list}).
-record(auto_name,{id,last_name,first_name}).
-record(back_echantment_stone,{id,back_stone}).
-record(battlefield_proto,{protoid,args,start_line,duration,instance_proto,respawn_buff}).
-record(block_training,{level,growth,duration,spgrowth}).
-record(buffers,{id,level,name,description,class,resist_type,duration,effect_interval,addition_threat,effectlist,effect_argument,deadcancel,can_active_cancel}).
-record(chat_condition,{id, items,level}).
-record(chess_spirit_config,{npcid,type,fixed_skills,random_skills,max_section,section_duration,chess_skills,chess_max_power,chess_power_addation}).
-record(chess_spirit_rewards,{type_level,exp_args,expect_sec}).
-record(chess_spirit_section,{type_section,power_rewards,spawns,item_rewards,skills_level}).
-record(christmas_activity_reward,{type,consume,reward}).
-record(christmas_tree_config,{npcid,init_hp,max_hp,next_proto}).
-record(classbase,{classid,level,strength,agile,intelligence,stamina,power,magicdefense,rangedefense,meleedefense,hprecover,hprecoverinterval,mprecover,mprecoverinterval,commoncool}).
-record(congratulations,{level,notice_range,becount,bereward,reward,notice_count}).
%%-record(continuous_logging_gift,{day,normal_gift,vip_gift}).
-record(continuous_logging_gift,{day,reward}).
-record(activity_test01,{id,enabled,limit_times,money_type,money_count}).

-record(country_proto,{post,num,items_l30,items_l50,items_l70,reward,blocktalktimes,remittimes,punishtimes,appointtimes,items_useful_time_s}).
-record(creature_proto,{id,name,level,npcflags,hpmax,mpmax,attacktype,power,commoncool,immunes,hitrate,dodge,criticalrate,criticaldestroyrate,toughness,debuff_resist,walkspeed,runspeed,exp,min_money,max_money,skills,skillrates,defense,hatredratio,alert_radius,bounding_radius,script_hatred,script_skill,displayid,walkdelaytime,faction,death_share,script_baseattr}).
-record(creature_spawns,{id,protoid,mapid,bornposition,movetype,waypoint,respawntime,actionlist,hatreds_list,born_with_map}).
-record(designation_data,{key,attr_addition}).
-record(dragon_fight_db,{id,start_pos,duration,relation_questid,red_dragon_buff,blue_dragon_buff}).
-record(drop_rule,{ruleid,name,roleflag,itemsdroprate}).
-record(enchantments,{level,bonuses,consum,riseup,successrate,failure,protect,return,lucky,set_attr,add_attr,successsysbrd,faildsysbrd,faildsysbrdwithprotect}).
-record(enchantments_lucky,{id,rate}).
-record(enchant_convert,{property,convert}).
-record(enchant_opt,{id,enchant,recast,recast_gold,enchant_gold,convert_gold,property_count}).
-record(enchant_property_opt,{id,property,priority,max_count,group,min_value,max_value,min_priority,max_priority,max_quality_range}).
-record(equipmentset,{id,num,states,includeids}).
-record(equipment_fenjie,{quality,needmoney,result,resultcount}).
-record(equipment_move,{flevel,tlevel,needmoney,needitem}).
-record(equipment_sysbrd,{id,itemlist,brdid}).
-record(equipment_upgrade,{equipid,needitem,needitemcount,needmoney,resultid}).
-record(everquests,{id,type,special_tag,required,datelines,guild_required,qualityrates,refresh_info,rounds_num,clear_time,quests,sections,section_counts,section_rewards,reward_exp_type,quality_extra_rewards,free_recover_interval}).
-record(faction_relations,{id,friendly,opposite}).
-record(festival_control,{id,show,starttime,endtime,award_limit_time}).
-record(festival_recharge_gift,{id,needcount,gift}).
-record(goals,{goalsid,level,part,require,bonus,type,script}).
-record(guild_authorities,{id,name,disabled=0}).
-record(guild_auth_groups,{id,level,name,authids}).
-record(guild_battle_proto,{week,checktime,startapplytime,stopapplytime,starttime}).
-record(goals_role,{roleid,goals}).
-record(guild_facilities,{id,level,name,rate,check_script,require_resource,require_time}).
-record(guild_setting,{id,value}).
-record(guild_shop,{level,itemslist,preview_itemslist}).
-record(guild_shop_items,{id,itemid,showindex,guild_contribution,base_price,discount,minlevel,limitnum,itemtype}).
-record(guild_treasure,{level,itemslist}).
-record(guild_treasure_items,{id,itemid,showindex,guild_contribution,base_price,minlevel,limitnum,itemtype}).
-record(guild_treasure_transport_consume,{guildlevel,consume}).
-record(honor_store_items,{part,items}).
-record(inlay,{level,type,stonelevel,remove}).
-record(instance_proto,{protoid,type,create_leadertag,create_item,level,membernum,dateline,quests,item_need,can_direct_exit,datetimes,restrict_items,level_mapid,duration_time,nextproto}).
-record(item_identify,{item_class,consume,rateinfo}).
-record(item_template,{entry,name,class,displayed,equipmentset,level,qualty,requiredlevel,stackable,maxdurability,inventorytype,sockettype,allowableclass,useable,sellprice,damage,defense,states,spellid,spellcategory,spellcooldown,bonding,maxsoket,scriptname,questid,baserepaired,overdue_type,overdue_args,overdue_transform,enchant_ext}).
-record(jszd_rank_option,{rank,guild_money,guild_score,rolehonor,exp,bonus}).
-record(levelup_opt,{level,items,script}).
-record(level_activity_rewards_db,{level,dragon_fight_exp}).
-record(loop_instance,{id,times,members,levellimit}).
-record(loop_instance_proto,{layer,exp,money,bonus,soulpower,instance_proto,type,monsters,time,targetnpclist,bornpos}).
-record(loop_tower,{layer,consum_money,enter_prop,convey_prop,exp,bonus,instance_id,week_bonus,monsters,loop_prop}).
-record(lottery_counts,{level,count}).
-record(lottery_droplist,{class_level_id,class,level,ruleids}).
-record(mainline_defend_config,{chapter,stage,difficulty,class,section,spawns}).
-record(mainline_proto,{chapter,stage,pre_stage,entry_condition,entry_times,difficulty,class,transportid,monsterslist,type,time_s,killmonsterlist,protectnpclist,defend_sections,first_award_money,first_award_exp,first_award_items,common_award_money,common_award_exp,common_award_items,level_factor,time_factor,designation,section_duration}).
-record(mall_item_info,{id,ntype,special_type,ishot,name,sort,price,discount,tips,displayid,restrict,bodcast}).
-record(mall_sales_item_info,{id,ntype,name,sort,price,discount,duration,sales_time,restrict,bodcast}).
-record(map_info,{mapid,map_name,is_instance,map_tag,restrict_items,script,can_flyshoes,linetag,serverdataname,pvptag}).
-record(npc_dragon_fight,{npcid,faction}).
-record(npc_drop,{npcid,rate,ruleids}).
-record(npc_exchange_list,{npcid,exchangeitems}).
-record(everquest_list,{npcid,everlist}).
-record(npc_sell_list,{npcid,sellitems}).
-record(npc_trans_list,{npcid,id}).
-record(quest_npc,{npcid,quest_action}).
-record(npc_functions,{npcid,function}).
-record(offline_everquests_exp,{id,quest_ids,level_range,exp,max,addcount}).
-record(offline_exp,{level,hourexp,exchange}).
-record(open_service_activities,{id,partinfolist}).
-record(open_service_activities_time,{id,show,starttime,endtime}).
-record(pet_evolution,{petproto,consume,rate,result_petproto,order}).
-record(pet_explore_gain,{id,level_limit,limit_attr,attr_value,general_drop,special_drop,add_mystery_drop,unadd_mystery_drop,starttime,endtime,week}).
-record(pet_explore_style,{id,time,rate}).
-record(pet_growth,{quality,growth}).
-record(pet_happiness,{range,percent}).
-record(pet_level,{level,exp,maxhp,sysaddattr}).
-record(pet_proto,{protoid,name,species,femina_rate,class,min_take_level,quality_to_growth,born_abilities,born_attr,born_talents,born_skills,happiness_cast,born_quality,born_quality_up,can_delete,can_explore}).
-record(pet_quality,{quality_value,rate,needs,protect,money}).
-record(pet_quality_up,{quality_value,rate,consumemoney,needs,consumegold}).
-record(pet_skill_slot,{index,rate}).
-record(pet_slot,{slot,price}).
-record(pet_talent_consume,{type,consume}).
-record(pet_talent_rate,{type,talent,rateinfo}).
-record(pet_wash_attr_point,{key,needs,consumegold}).
-record(pet_item_mall,{keynum,protoid,playid,classtype,price,quality}).
-record(quests,{id,isactivity,level,limittime,required,prevquestid,nextquestid,rewrules,rewitem,choiceitemid,rewxp,reworreqmoney,reqmob,reqmobitem,objectivemsg,objectivetext,acc_script,on_acc_script,com_script,on_com_script,direct_com_disable}).
-record(refine_system,{serial_number,output_bond_item,output_unbond_item,need_items,rate,need_money,output_type}).
-record(remove_seal,{equipid,needitem,needitemcount,needmoney,resultid}).
-record(ridepet_synthesis,{quality,consume,rateinfo}).
-record(ride_proto_db,{item_template_id,add_buff,drop_rate}).
-record(role_level_bonfire_effect_db,{level,exp,soulpower}).
-record(role_level_experience,{level,experience}).
-record(role_level_sitdown_effect_db,{level,exp,soulpower,hppercent,mppercent,zhenqi}).
-record(role_level_soulpower,{level,maxpower,spreward}).
-record(role_petnum,{level,default_num,max_num}).
-record(series_kill,{level,kill_num,effect_time,buff_info,npc_level_diff,instance_power_effect}).
-record(skills,{id,level,name,type,rate,target_type,max_distance,isaoe,aoeradius,interrupt,aoe_max_target,target_destroy,aoe_target_destroy,self_destroy,cooldown,cast_type,cast_time,addtion_threat,target_buff,caster_buff,remove_buff,cost,flyspeed,learn_level,class,script,money,required_skills,hit_addition,soulpower,creature,items,addtion_power}).
-record(sock,{punchnum,consume,money,rate}).
-record(spa_exp,{level,exp,soulpower,chopping_self,chopping_be,swimming_self,swimming_be}).
-record(spa_option,{spa_id,instance_proto,looptime,duration,chopping,swimming,vip_exp_addition,vip_op_addition}).
-record(stonemix,{stoneclass,rate,silver,gold,result}).
-record(system_chat,{id,type,scope,color,msg,color_replace}).
-record(tangle_reward_info,{rankedge,honor,exp,item}).
-record(template_itemproto,{setid,entry}).
-record(timelimit_gift,{id,droplist}).
-record(transports, {mapid,tranportid,coord,transid,description}).
-record(transport_channel,{id,mapid,coord,type,level,items,money,viplevel}).
-record(treasure_chest_drop,{proto_level1_level2_class,drops}).
-record(treasure_chest_rate,{proto_count,rate_base}).
-record(treasure_chest_times,{times,consume_gold_list}).
-record(treasure_chest_type,{type,protoid_list}).
-record(treasure_spawns,{id,type,maps,interval,round_num,spawn_num,map_spawns}).
-record(role_treasure_storage,{roleid,itemlist,max_item_id,ext}).
-record(treasure_transport,{level,rewardexp,reward_money}).
-record(treasure_transport_quality_bonus,{quality,bonus}).
-record(venation_advanced,{venationinfo,effect,success_rate,need_money,need_gold,useitem,protect_item}).
-record(venation_exp_proto,{level,exp,shareexp}).
-record(venation_item_rate,{num,rate}).
-record(venation_point_proto,{id,venation,parent_point,attr_addition,soulpower,money,active_rate,needlevel}).
-record(venation_proto,{id,point_num,attr_addition}).
-record(vip_level,{level,gold,addition,bonus}).
-record(welfare_activity_data,{type,isshow,starttime,endtime,gift,condition}).
-record(yhzq_battle,{id,spawnpos,npcproto,lamsterbuff}).
-record(yhzq_winner_raward,{type,score,honor,exp,item}).
-record(guild_monster_proto,{monsterid,needlevel,upgrademoney,callmoney,bornpos}).
-record(roleattr,{roleid,account,name,sex,class,level,exp,hp,mana,currencygold,currencygift,silver,boundsilver,mapid,coord,bufflist,training,packagesize,groupid,guildid,pvpinfo,pet,offline,soulpower,stallname,honor,fightforce}).
-record(quest_role,{roleid,quest_list}).
-record(role_quick_bar,{roleid,quickbarinfo}).
-record(role_skill,{roleid,skillinfo}).
-record(instance_quality_proto,{protoid,npclist,freetime,itemtype,gold,rate,addfac}).

%%副本元宝委托
%%{instance_entrust,10004,8,70,15000,[{13090011,8},{13110011,6},{13110021,2},{13110051,1},{19030011,1},{19000710,1}],250}.
-record(instance_entrust,{id,gold,level,fighting_force,gifts,unknown_val}).
%%批量合成概率  by zhangting%%
-record(stonemix_rateinfo,{amount,rate}).
%%宠物技能模板
-record(pet_skill_template,{skillid,skilllevel,skill,itemid}).
%%宠物属性转化率
-record(pet_attr_transform,{quality,transform}).
%%宠物成长提升
-record(pet_up_growth,{growth,ratevalue,needitem}).
%%宠物技能
-record(pet_skill_book_rate,{lucky,rate}).
-record(pet_skill_book,{level,skill}).
%%宠物技能槽位
-record(pet_skill_proto,{slot,required,money}).
%%宠物刷新出来的技能保存在数据库
-record(pet_fresh_skill,{roleid,lucky,skillinfo}).
%%宠物进阶
-record(pet_base_attr,{proto,hp,power,defence,hprate,powerrate,defencerate,data1,data2}).
%%宠物洗髓
-record(pet_xisui_rate,{xisui,rate}).
%%宠物天赋
-record(pet_talent_item,{level,item,money}).
%%天赋类型，所需条件，是否可升级(生命，攻击，防御不可升级)，名字
-record(pet_talent_proto,{type,talnetid,required,upgrade,name}).
-record(pet_talent_template,{talnetid,level,affect}).
%%宠物进阶
-record(pet_advance,{step,itemnum,money}).
-record(pet_advance_lucky,{step,lucky,rate}).
%%充值礼包
-record(charge_package_proto,{type,money,gift}).
%%幻化卡
-record(item_can_used,{itemid,data}).
%%飞剑
%%升级
-record(wing_level,{level,item,money,power,defence,hpmax,mpmax}).
%%进阶
-record(wing_phase,{phase,item,money,speed,power,defense,hpmax,mpmax,maxintensity,failedbless,rate,addrate}).
%%品质提升
-record(wing_quality,{quality,item,money,power,defense,hpmax,mpmax,skill}).
%%强化
-record(wing_intensify_up,{intensify,item,money,maxperfectness,unlockskill,attrrate}).
%%技能
-record(wing_skill,{skillid,level,item,money,effectinfo}).
%%飞剑所需物品元宝价格
-record(item_gold_price,{itemid,price}).
%%飞剑洗练
-record(wing_echant,{quality,item,money,maxnumber}).
-record(wing_echant_lock,{num,gold,item}).

%%动态表记录
-record(account,{username,roleids,gold,qq_gold,local_gold,nickname,gender,first_login_ip,first_login_time,last_login_ip,last_login_time,login_days,is_yellow_vip,is_yellow_year_vip,yellow_vip_level,first_login_platform,login_platform}).
-record(activity_info_db,{activityid,activity_info}).
-record(auction,{id,roleinfo,nickname,items,stallmoney,create_time,ext}).
-record(auto_name_used,{name,roleid,roleinfo}).
-record(consume_return_info,{roleid,consume_gold}).
-record(country_record,{countryid,postinfo,countryinfo,ext}).
-record(friend,{owner,fid,fname,finfo}).
-record(game_rank_db,{type_roleid,rank_info,record_time}).
-record(gm_role_privilege,{roleid,privilege}).
-record(guild_battle_score,{guildid,gbscore,totlescore,wininfo}).
-record(guild_leave_member,{roleid,time,lastguildid,contribution,tcontribution}).
-record(guild_log,{key_guild_time,guildid,memberid,logtype,description,time}).
-record(guild_member_treasure,{key_id_member,guildid,memberid,count,time,ext}).
-record(guild_right_limit,{guildid,smith,battle}).
-record(guilditems,{id,ownerguid,entry,enchantments,count,slot,bound,sockets,duration,cooldowninfo,enchant,overdueinfo,state}).
-record(guildpackage_apply,{guildid,roleid,itemid,count,datetime}).
-record(idmax,{idtype,maxvalue}).
-record(mail,{mailid,from,toid,title,content,add_items,add_gold,add_silver,status,send_time,type}). 
-record(mall_up_sales_table,{id,ntype,name,sort,price,discount,duration,uptime,restrict,bodcast}).
-record(offline_exp_rolelog,{roleid,offline_log}).
-record(pet_shop_info,{roleid,shopinfo,time}).
-record(role_activity_value,{roleid,state,value,reward}).
-record(role_buy_log,{roleid,buylog}).
-record(role_buy_mall_item,{roleid,buylog}).
-record(role_chess_spirit_log,{roleid,last_info,best_info,ext}).
-record(role_congratu_log,{roleid,log}).
-record(role_continuous_logging_info,{roleid,info}).
-record(role_designation_info,{roleid,cur_designation,designation_info}).
-record(role_gold_exchange_info,{roleid,exchange_ticket}).
-record(role_judge_left_num,{roleid,info}).
-record(role_judge_num,{roleid,disdain_num,praised_num}).
-record(role_login_bonus,{roleid,bonustime}).
-record(role_loop_instance,{roleid,record}).
-record(role_loop_tower,{roleid,layertime,highest,log}).
-record(role_mall_integral,{roleid,charge_integral,consumption_integral}).
-record(role_service_activities_db,{roleid,activities_info}).
-record(role_sum_gold,{roleid,sum_gold,duration_sum_gold}).
-record(role_treasure_transport_db,{roleid,questid,type,quality,bonus,recev_time,last_rob_time,rob_times}).
-record(role_venation,{roleid,active_point,share_exp,ext}).
-record(role_venation_advanced,{roleid,venation_info}). 
-record(role_welfare_activity_info,{roleid_type,serialnumber}).
-record(tangle_battle,{date_class,info,has_record}).
-record(tangle_battle_kill_info,{date_class,info}).
-record(vip_role,{roleid,start_time,duration,level,bonustime,logintime,flyshoes}).
-record(yhzq_battle_record,{date_class,info,has_record,ext}).
-record(player_option,{roleid,options}).
-record(playeritems,{id,ownerguid,entry,enchantments,count,slot,isbond,sockets,duration,cooldowninfo,enchant,overdueinfo}).
-record(pets,{petid,masterid,protoid,petinfo,skillinfo,equipinfo,ext1,ext2}).
-record(role_mainline,{roleid,record_list}).
-record(role_instance,{roleid,starttime,instanceid,lastpostion,log}).
-record(achieve_role,{roleid,achieves}).
-record(guild_monster,{guildid,monster,lefttimes,time,lastcalltime,activmonster}).
-record(wing_role,
		{roleid,
		 level,                  %%飞剑等级
		 social,                %%飞剑品阶
		quality,               %%飞剑品质
		streng,                %%强化
		streng_up,             %%强化上限
		perfect_value,         %%强化加成
		skills,                           %%飞剑技能
		echants,            %%洗练属性
		lucky                      %%进阶幸运值
		}).
-record(tangle_battle_role_killnum,{roleid,killnum}).
-record(signature,{roleid,sign}).
-record(role_timelimit_gift,{roleid,last_gift_index,last_gift_time,last_gift,ext}).
-record(role_lottery,{roleid,last_lottery,leftcount,status}).
-record(role_levelup_opt_record,{roleid_level,roleid,ext}). 
-record(role_instance_quality, {roleid, info, ext, quality}).
-record(role_first_charge_gift,{roleid,state,ext}).
-record(role_festival_recharge_data,{roleid,exchange_info}).
-record(recharge1, {datetime, uid, money, platform, vip_level}).
-record(consume, {billno, uid, datetime, bound_gold, platform_gold, vip_level, item, num, price, platform}).
-record(pet_explore_storage,{roleid,itemlist,max_item_id,ext}).
-record(pet_explore_info,{petid,masterid,remaintimes,siteid,styleid,starttime,duration_time,lacky,last_time,ext}).
-record(pet_explore_background,{id,mapid,starttime,endtime,week}).
-record(open_service_activitied_control,{id,show,starttime,endtime}).
-record(loop_tower_instance,{layer,roleid,rolename,time}).
-record(loop_instance_record,{layer,besttime}).
-record(jszd_role_score_info,{roleid,score,killnum}).
-record(jszd_role_score_honor,{numedge,honor}).
-record(guild_treasure_price,{key_guild_id,guildid,price,ext}).
-record(guild_member_shop,{key_id_member,guildid,memberid,count,time,ext}). 
-record(guild_impeach_info,{guildid,roleid,notice,support,opposite,starttime,voteids}).
-record(guild_facility_info,{key_id_fac,guildid,facilityid,level,upgradestatus,upgrade_finished_time,required,contribution}).
-record(guild_events,{key_guild_time,guildid,description,time}). 
-record(guild_battle_result,{guildname,score,rank}).
-record(guild_baseinfo,{id,name,level,silver,gold,notice,createtime,chatgroup,voicegroup,lastactivetime,sendwarningmail,applyinfo,treasure_transport,package}).
-record(gm_notice,{id,ntype,left_count,begin_time,end_time,interval_time,notice_content,last_notice_time}).
-record(gm_blockade,{roleid_type,start_time,duration_time}).
-record(global_monster_loot_db,{id,npclist,minlevel,dropids,start_time,end_time}). 
-record(global_exp_addition_db,{key,typeid,line,map,class,minlevel,maxlevel,starttime,endtime,numerator,denominator}).
-record(giftcards,{cardid,roleid}). 
-record(festival_recharge_gift_bg,{id,needcount,gift}).
-record(festival_control_background,{id,show,starttime,endtime,award_limit_time}).
-record(fatigue,{userid,fatigue,offline,relex}).
-record(facebook_bind,{roleid,fb_quest}).
-record(enchant_extremely_property_opt,{id,property,priority,max_count,group,min_value,max_value,min_priority,max_priority,max_quality_range}).
-record(christmas_tree_db,{npcid,now_hp,max_hp}).
-record(black,{owner,fid,fname,finfo}).
-record(background_welfare_data,{type,isshow,starttime,endtime}).
-record(answer_roleinfo,{roleid,roleinfo}).
-record(activity_test01_role,{roleid,info}).
-record(pet_advance_reset_time,{roleid,time}).
-record(role_favorite_gift_info,{roleid,awarded}).
-record(role_invite_friend_info,{roleid,friends,amount_awards}).
-record(instance_pos,{instance_id,creation,starttime,can_join,node,pid,mapid,protoid,members}).%% set ram
-record(guild_member,{key_id_member,guildid,memberid,contribution,tcontribution,authgroup,nickname,todaymoney,totalmoney}).
-record(open_service_level_rank_db,{type,ranklist}).
-record(furnace,{roleid,refineinfo,furnace_level}).
-record(furnace_add_role_attribute,{roleid,pill_use_info}).
-record(astrology_add_role_attribute,{roleid,star_use_info}).
-record(astrology_package,{roleid,packageinfo,unlocknum}).